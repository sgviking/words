---
- name: Provision and configure word API
  hosts: words
  become: true
  gather_facts: true
  tasks:

  - name: Debug - ansible_distribution
    debug: var=ansible_distribution verbosity=2

  - name: Fail if not on Ubuntu
    assert: { that: "ansible_distribution == 'Ubuntu'" }

  - name: Install pre-requisite packages and update apt cache
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
      cache_valid_time: "{{ apt_cache_valid_time }}"
    with_items:
      - python-pip
      - python-dev
      - libffi-dev
      - nginx

  - name: Copy Words API code (src/) to server
    copy:
      src: src/
      dest: "{{ api_destination }}"
      owner: nobody
      group: nogroup
    notify:
      - Restart Gunicorn

  - name: Install pip packages
    pip: requirements="{{ api_destination }}/requirements.txt"

  - name: Set permissions for gunicorn log directory
    file:
      path: /var/log/gunicorn
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: Set permissions for gunicorn log files
    file:
      path: "{{ item }}"
      state: touch
      owner: nobody
      group: nogroup
      mode: 0644
    with_items:
      - /var/log/gunicorn/access.log
      - /var/log/gunicorn/gunicorn.log

  - name: Add gunicorn upstart configuration from template
    template:
      src: gunicorn.conf.j2
      dest: /etc/init/gunicorn.conf
      owner: root
      mode: 0644
    notify: Restart Gunicorn

  - name: Enable gunicorn service and ensure it is running
    service:
      name: gunicorn
      state: started
      enabled: yes

  - name: Install server certificate
    copy:
      content: "{{ server_cert }}"
      dest: /etc/ssl/certs/words.crt
      owner: root
      group: root
      mode: 0600
    notify: Restart Gunicorn

  - name: Debug - server_cert
    debug: var=server_cert verbosity=4

  - name: Install server key
    copy:
      content: "{{ server_key }}"
      dest: /etc/ssl/private/words.key
      owner: root
      group: root
      mode: 0600
    notify: Restart Gunicorn

  - name: Debug - server_key
    debug: var=server_key verbosity=4

  - name: Add NGINX upstream_app_servers configuration
    template:
      src: upstream_app_servers.conf.j2
      dest: /etc/nginx/conf.d/upstream_app_servers.conf
      owner: root
      mode: 0644
    notify: Restart NGINX

  - name: Add NGINX client_max_body_size configuration
    template:
      src: client_max_body_size.conf.j2
      dest: /etc/nginx/conf.d/client_max_body_size.conf
      owner: root
      mode: 0644
    notify: Restart NGINX

  - name: Add NGINX default site
    template:
      src: default.j2
      dest: /etc/nginx/sites-available/default
      owner: root
      mode: 0644
    notify: Restart NGINX

  - name: Enable NGINX service and ensure it is running
    service:
      name: nginx
      state: started
      enabled: yes

  handlers:

    - name: Restart Gunicorn
      service:
        name: gunicorn
        state: restarted

    - name: Restart NGINX
      service:
        name: nginx
        state: restarted

